{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 5,
    "pending": 0,
    "failures": 2,
    "start": "2022-05-13T19:28:33.853Z",
    "end": "2022-05-13T19:28:35.516Z",
    "duration": 1663,
    "testsRegistered": 7,
    "passPercent": 71.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b071a5ad-d6f8-43aa-8ef5-650c05387720",
      "title": "",
      "fullFile": "cypress/integration/produtos.spec.js",
      "file": "cypress/integration/produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
          "title": "Teste da funcionalidade produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de produtos",
              "fullTitle": "Teste da funcionalidade produtos Deve validar contrato de produtos",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "92d54c99-c511-46e5-be7f-9891291f5437",
              "parentUUID": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar produtos",
              "fullTitle": "Teste da funcionalidade produtos Listar produtos",
              "timedOut": null,
              "duration": 421,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: '/produtos'\n}).then(response => {\n  expect(response.body.produtos[1].nome).to.equal('Novo produto bacana da EBAC23');\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(1000);\n});",
              "err": {
                "message": "AssertionError: expected 'Novo produto bacana da EBAC 13' to equal 'Novo produto bacana da EBAC23'",
                "estack": "AssertionError: expected 'Novo produto bacana da EBAC 13' to equal 'Novo produto bacana da EBAC23'\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress\\integration\\produtos.spec.js:174:49)",
                "diff": "- 'Novo produto bacana da EBAC 13'\n+ 'Novo produto bacana da EBAC23'\n"
              },
              "uuid": "638c68e0-4cf1-4b3e-9c44-cb62bca52af3",
              "parentUUID": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar produto",
              "fullTitle": "Teste da funcionalidade produtos Cadastrar produto",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Novo produto bacana da EBAC ${Math.floor(Math.random() * 1000)}`;\ncy.request({\n  method: 'POST',\n  url: '/produtos',\n  body: {\n    \"nome\": produto,\n    \"preco\": 500,\n    \"descricao\": \"Produto bacana23\",\n    \"quantidade\": 300\n  },\n  headers: {\n    authorization: token\n  }\n}).then(response => {\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  expect(response.status).to.equal(201);\n});",
              "err": {},
              "uuid": "952f71ba-3e12-4ad7-a1ac-004088e37134",
              "parentUUID": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Teste da funcionalidade produtos Deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, \"Logitech MX Vertical\", 500, \"Produto Bacana\", 50).then(response => {\n  expect(response.body.message).to.equal('J치 existe produto com esse nome');\n  expect(response.status).to.equal(400);\n});",
              "err": {},
              "uuid": "8fdcac69-4597-41bf-995d-e4137b706289",
              "parentUUID": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto j치 cadastrado",
              "fullTitle": "Teste da funcionalidade produtos Deve editar um produto j치 cadastrado",
              "timedOut": null,
              "duration": 347,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  let id = response.body.produtos[2]._id;\n  cy.request({\n    method: 'PUT',\n    url: `/produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": \"Logitech MX Vertical\",\n      \"preco\": 470,\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": 375\n    }\n  }).then(response => {\n    expect(response.body.message).to.be.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/produtos/3tUp0zMKlBTYHckg\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PUT\nURL: http://localhost:3000/produtos/3tUp0zMKlBTYHckg\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjUyNDcwMTE0LCJleHAiOjE2NTI0NzA3MTR9.EF_R02-9VsknFu3-4yTiZWyrkWWCj8zSEnCec8IaWME\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.6.1 Chrome/94.0.4606.81 Electron/15.5.1 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 90\n}\nBody: {\"nome\":\"Logitech MX Vertical\",\"preco\":470,\"descricao\":\"Produto Editado\",\"quantidade\":375}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"access-control-allow-origin\": \"*\",\n  \"x-dns-prefetch-control\": \"off\",\n  \"x-frame-options\": \"SAMEORIGIN\",\n  \"strict-transport-security\": \"max-age=15552000; includeSubDomains\",\n  \"x-download-options\": \"noopen\",\n  \"x-content-type-options\": \"nosniff\",\n  \"x-xss-protection\": \"1; mode=block\",\n  \"x-moesif-transaction-id\": \"18e1f5a2-77e9-442c-8d3a-9ee8a792aacd\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"53\",\n  \"date\": \"Fri, 13 May 2022 19:28:34 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"message\": \"J치 existe produto com esse nome\"\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:3000/produtos/3tUp0zMKlBTYHckg\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PUT\nURL: http://localhost:3000/produtos/3tUp0zMKlBTYHckg\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjUyNDcwMTE0LCJleHAiOjE2NTI0NzA3MTR9.EF_R02-9VsknFu3-4yTiZWyrkWWCj8zSEnCec8IaWME\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/9.6.1 Chrome/94.0.4606.81 Electron/15.5.1 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 90\n}\nBody: {\"nome\":\"Logitech MX Vertical\",\"preco\":470,\"descricao\":\"Produto Editado\",\"quantidade\":375}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"access-control-allow-origin\": \"*\",\n  \"x-dns-prefetch-control\": \"off\",\n  \"x-frame-options\": \"SAMEORIGIN\",\n  \"strict-transport-security\": \"max-age=15552000; includeSubDomains\",\n  \"x-download-options\": \"noopen\",\n  \"x-content-type-options\": \"nosniff\",\n  \"x-xss-protection\": \"1; mode=block\",\n  \"x-moesif-transaction-id\": \"18e1f5a2-77e9-442c-8d3a-9ee8a792aacd\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"53\",\n  \"date\": \"Fri, 13 May 2022 19:28:34 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: {\n  \"message\": \"J치 existe produto com esse nome\"\n}\n\n\nhttps://on.cypress.io/request\n    at http://localhost:3000/__cypress/runner/cypress_runner.js:165424:80\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:11139:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress\\integration\\produtos.spec.js:208:10)",
                "diff": null
              },
              "uuid": "445c13d2-5c43-46cd-bf9b-7fa2c4a61893",
              "parentUUID": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto cadastrado previamente",
              "fullTitle": "Teste da funcionalidade produtos Deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Novo produto bacana da EBAC ${Math.floor(Math.random() * 1000)}`;\ncy.cadastrarProduto(token, produto, 500, \"Produto Bacana\", 50).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `/produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 470,\n      \"descricao\": \"Produto Editado Editado\",\n      \"quantidade\": 375\n    }\n  });\n});",
              "err": {},
              "uuid": "8b0cb95d-2038-45b2-9cea-29bd0a918da0",
              "parentUUID": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um produto previamente cadastrado",
              "fullTitle": "Teste da funcionalidade produtos Deve deletar um produto previamente cadastrado",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Novo produto bacana da EBAC ${Math.floor(Math.random() * 1000)}`;\ncy.cadastrarProduto(token, produto, 500, \"Produto Bacana\", 50).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `/produtos/${id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.body.message).to.be.equal('Registro exclu칤do com sucesso');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "a544859a-6a39-4c0a-867f-7dc93fe94e54",
              "parentUUID": "ee2ad9fc-4b79-4802-b3bc-39d9f5ca3b96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92d54c99-c511-46e5-be7f-9891291f5437",
            "952f71ba-3e12-4ad7-a1ac-004088e37134",
            "8fdcac69-4597-41bf-995d-e4137b706289",
            "8b0cb95d-2038-45b2-9cea-29bd0a918da0",
            "a544859a-6a39-4c0a-867f-7dc93fe94e54"
          ],
          "failures": [
            "638c68e0-4cf1-4b3e-9c44-cb62bca52af3",
            "445c13d2-5c43-46cd-bf9b-7fa2c4a61893"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1495,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}